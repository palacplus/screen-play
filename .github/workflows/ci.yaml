name: CI

on:
  push:
    branches: [feature/*, bugfix/*, hotfix/*, develop, main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  dotnet-test:
    runs-on: ubuntu-latest
    env:
      TEST_PATH: ./src/ScreenPlay.Server.Tests
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore ${{ env.TEST_PATH }}
    - name: Build
      run: dotnet build --no-restore ${{ env.TEST_PATH }}
    - name: Test
      run: dotnet test --no-build --verbosity normal ${{ env.TEST_PATH }}

  node-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    - run: npm ci
      working-directory: ./frontend
    - run: npm test
      working-directory: ./frontend

  docker-build:
    uses: ./.github/workflows/docker.yaml
    needs: [dotnet-test, node-test]
    secrets: inherit
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

  e2e:
    uses: ./.github/workflows/e2e.yaml
    needs: docker-build
    with:
      clientImageTag: ${{ needs.docker-build.outputs.client-tags }}
      serverImageTag: ${{ needs.docker-build.outputs.server-tags }}
    secrets: inherit
