name: Push Docker Images

on:
  push:
    tags: [v*]
  workflow_call:
    outputs:
      client-tags:
        description: 'Image tag'
        value: ${{ jobs.build-and-push-images.outputs.client-tags }}
      server-tags:
        description: 'Image tag'
        value: ${{ jobs.build-and-push-images.outputs.server-tags }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      server-tags: ${{ steps.meta-server.outputs.tags }}
      client-tags: ${{ steps.meta-client.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for server image
        id: meta-server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push server image
        id: push-server-image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.server
          push: true
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}

      # Uncomment following making the repo public
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push-server-image.outputs.digest }}
      #     push-to-registry: true

      - name: Extract metadata for server image
        id: meta-client
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push server image
        id: push-client-image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.client
          push: true
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}

      # Uncomment following making the repo public
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push-client-image.outputs.digest }}
      #     push-to-registry: true
  
  update-helm:
    runs-on: ubuntu-latest
    needs: build-and-push-images
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Update values.yaml
        run: |
          cd helm/screen-play
          TAG=${{ github.ref_name }}
          echo "TAG: $TAG"
          VERSION=${TAG#v}
          echo "VERSION: $VERSION"
          sed -i '' 's/^appVersion: .*/appVersion: '$VERSION'/' Chart.yaml
          cat values.yaml
